# Generated by Django 3.2.5 on 2022-02-03 21:18

import app.validators
from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('fathers_name', models.CharField(blank=True, max_length=150, null=True)),
                ('username', models.CharField(max_length=150, unique=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('address', models.CharField(blank=True, max_length=100, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True, validators=[app.validators.validate_phone])),
                ('role', models.CharField(blank=True, choices=[('ceo', 'Ceo'), ('Direktor', 'Director'), ('Menejer', 'Manager'), ('Moliyachi', 'Financier'), ("Filial boshlig'i", 'Head Of Branch'), ('Yetkazib beruvchi', 'Deliver'), ('Sotuvchi', 'Seller'), ('Kassir', 'Cashier'), ("Ta'minotchi", 'Provider'), ('Sotuvchi kassir', 'Seller With Cashier'), ('Omborchi', 'Warehouseman'), ('Qopchi', 'Bag')], max_length=35, null=True)),
                ('salary', models.FloatField(default=0)),
                ('status', models.CharField(blank=True, choices=[('active', 'active'), ('inactive', 'inactive')], default='active', max_length=10, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Barcode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('barcode', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_of_branch', models.CharField(choices=[('b2b', 'B2B'), ('b2c', 'B2C')], max_length=25)),
                ('address', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=50)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Filial',
                'verbose_name_plural': 'Filiallar',
            },
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('processing', 'processing'), ('waiting_loading', 'waiting_loading'), ('finished', 'finished')], default='processing', max_length=15)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(default=0)),
                ('percent', models.SmallIntegerField(default=0)),
                ('expire_date', models.DateField(blank=True, null=True)),
                ('is_bonus', models.BooleanField(default=False)),
                ('commit', models.CharField(blank=True, max_length=250, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.cart')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('is_mobile', models.BooleanField(default=False)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Check',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('active', 'active'), ('inactive', 'inactive')], default='active', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('b2b', 'B2B'), ('b2c', 'B2C')], max_length=25)),
                ('phone_1', models.CharField(max_length=20, validators=[app.validators.validate_phone])),
                ('phone_2', models.CharField(blank=True, max_length=20, null=True, validators=[app.validators.validate_phone])),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('address', models.CharField(max_length=50)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('loan_sum', models.FloatField(default=0)),
                ('loan_dollar', models.FloatField(default=0)),
                ('return_date', models.DateField(blank=True, null=True)),
                ('ball', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ClientReturn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(blank=True, max_length=1024, null=True)),
                ('return_date', models.DateField(null=True)),
                ('took_date', models.DateField(null=True)),
                ('status', models.CharField(choices=[('processing', 'processing'), ('finished', 'finished')], default='processing', max_length=15)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.branch')),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.cart')),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.client')),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance_sum', models.FloatField(default=0)),
                ('balance_dollar', models.FloatField(default=0)),
                ('balance_transfer', models.FloatField(default=0)),
                ('balance_card', models.FloatField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('real_currency', models.FloatField(default=0)),
                ('selling_currency', models.FloatField(default=0)),
                ('ball_price', models.FloatField(default=0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Deliver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('b2b', 'B2B'), ('b2c', 'B2C')], max_length=200)),
                ('name', models.CharField(max_length=255)),
                ('director_name', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('bank_hr', models.CharField(blank=True, max_length=255, null=True)),
                ('inn', models.CharField(blank=True, max_length=255, null=True)),
                ('mfo', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('region', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('phone_1', models.CharField(blank=True, max_length=25, null=True)),
                ('phone_2', models.CharField(blank=True, max_length=25, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='DiscountCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card', models.CharField(max_length=20, unique=True)),
                ('bonus_dollar', models.FloatField(default=0)),
                ('bonus_sum', models.FloatField(default=0)),
                ('percentage', models.SmallIntegerField(default=0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='InventoryInvoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('created', 'Jarayonda'), ('closed', 'Tugatildi')], default='created', max_length=20)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app.branch')),
                ('controller', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expense', models.FloatField(default=0)),
                ('name', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('preparing', 'preparing'), ('send', 'send'), ('accepted', 'accepted'), ('cancelled', 'cancelled')], default='preparing', max_length=55)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('deliver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.deliver')),
                ('from_branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='from_branch', to='app.branch')),
            ],
        ),
        migrations.CreateModel(
            name='OutcomeType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='PriceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='price_type_client', to='app.client')),
                ('deliver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='price_type_deliver', to='app.deliver')),
            ],
        ),
        migrations.CreateModel(
            name='Producer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('b2b', 'B2B'), ('b2c', 'B2C')], max_length=25)),
                ('name', models.CharField(max_length=255)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, choices=[('product', 'Product'), ('service', 'Service')], default='product', max_length=50, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('currency', models.CharField(choices=[('sum', 'sum'), ('dollar', 'dollar')], max_length=15)),
                ('name', models.CharField(max_length=255)),
                ('ball', models.IntegerField(blank=True, default=0, null=True)),
                ('measurement', models.CharField(choices=[('dona', 'dona'), ('kg', 'kg'), ('litr', 'litr'), ('metr', 'metr')], max_length=25)),
                ('cost', models.FloatField(default=0)),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('barcode', models.ManyToManyField(blank=True, null=True, to='app.Barcode')),
            ],
        ),
        migrations.CreateModel(
            name='ProductMoveBranchGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('status', models.CharField(choices=[('pending', 'pending'), ('approved', 'approved'), ('rejected', 'rejected')], default='pending', max_length=55)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_product_move', to=settings.AUTH_USER_MODEL)),
                ('from_branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='move_from_branch', to='app.branch')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reviewed_product_move', to=settings.AUTH_USER_MODEL)),
                ('to_branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='move_to_branch', to='app.branch')),
            ],
        ),
        migrations.CreateModel(
            name='ProductReceipt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('comment', models.CharField(max_length=1024)),
                ('status', models.CharField(choices=[('processing', 'processing'), ('saved', 'saved'), ('accepted', 'accepted'), ('rejected', 'rejected')], default='processing', max_length=55)),
                ('sum_currency', models.FloatField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('currency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='receipt_currency', to='app.currency')),
                ('deliver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='deliver_reciepts', to='app.deliver')),
                ('from_branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reciepts_from_branch', to='app.branch')),
                ('price_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='receipt_price_type', to='app.pricetype')),
                ('staff', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reciepts', to=settings.AUTH_USER_MODEL)),
                ('to_branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reciepts_to_branch', to='app.branch')),
            ],
        ),
        migrations.CreateModel(
            name='ProductRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('requested', 'request'), ('accepted', 'accepted'), ('finished', 'finished'), ('rejected', 'rejected')], default='requested', max_length=30)),
                ('comment', models.CharField(blank=True, max_length=255, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_product_request', to=settings.AUTH_USER_MODEL)),
                ('from_branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sended_from_branch', to='app.branch')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reviewed_product_request', to=settings.AUTH_USER_MODEL)),
                ('to_branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='recieved_to_branch', to='app.branch')),
            ],
        ),
        migrations.CreateModel(
            name='ProviderInvoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('status', models.CharField(choices=[('preparing', 'preparing'), ('finished', 'finished')], default='preparing', max_length=55)),
                ('delivery_date', models.DateField()),
                ('comment', models.CharField(max_length=1024)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to=settings.AUTH_USER_MODEL)),
                ('deliver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='app.deliver')),
                ('to_branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='provider_invoices', to='app.branch')),
            ],
        ),
        migrations.CreateModel(
            name='Realize',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purpose', models.CharField(max_length=50)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('total_sum', models.FloatField(default=0)),
                ('total_dollar', models.FloatField(default=0)),
                ('total_card', models.FloatField(default=0)),
                ('total_loan_sum', models.FloatField(default=0)),
                ('total_loan_dollar', models.FloatField(default=0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.branch')),
            ],
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='branch_warehouse', to='app.branch')),
                ('staff', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='staff_warehouse', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StaffSalary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_delay', models.FloatField(default=0)),
                ('loan', models.FloatField(default=0)),
                ('bonus', models.FloatField(default=0)),
                ('comment', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Showcase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(default=0)),
                ('expire_date', models.DateField(blank=True, null=True)),
                ('dollar_summa', models.FloatField(default=0)),
                ('sum_summa', models.FloatField(default=0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.branch')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.product')),
            ],
        ),
        migrations.CreateModel(
            name='Shop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_number', models.IntegerField(default=0)),
                ('traded_at', models.DateTimeField()),
                ('card', models.FloatField(default=0)),
                ('loan_sum', models.FloatField(default=0)),
                ('cash_sum', models.FloatField(default=0)),
                ('discount_sum', models.FloatField(default=0)),
                ('loan_dollar', models.FloatField(default=0)),
                ('discount_dollar', models.FloatField(default=0)),
                ('transfer', models.FloatField(default=0)),
                ('cash_dollar', models.FloatField(default=0)),
                ('change_sum', models.FloatField(default=0)),
                ('change_dollar', models.FloatField(default=0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.branch')),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.client')),
                ('section', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.section')),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shop_seller', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ReturnPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField(default=0)),
                ('currency', models.CharField(blank=True, choices=[('sum', 'Sum'), ('dollar', 'Dollar')], default='sum', max_length=20, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('cart_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='return_price', to='app.cartitem')),
            ],
        ),
        migrations.CreateModel(
            name='ReturnDeliverProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(max_length=200)),
                ('amount', models.IntegerField()),
                ('cost', models.FloatField(default=0)),
                ('expire_date', models.DateField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('deliver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='returned_products', to='app.deliver')),
                ('from_branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='returnings', to='app.branch')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.product')),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProviderInvoiceItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(default=0)),
                ('cost', models.FloatField(default=0)),
                ('selling_price', models.FloatField(default=0)),
                ('expire_date', models.DateField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='app.providerinvoice')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductThroughBranch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('selling_price', models.FloatField(default=0)),
                ('status', models.CharField(blank=True, choices=[('tugagan', 'tugagan'), ('kam qolgan', 'kam qolgan'), ('yetarli', 'yetarli')], default='tugagan', max_length=25)),
                ('normative', models.IntegerField(default=0, verbose_name='Normativ kun')),
                ('is_valid', models.BooleanField(default=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.branch')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.product')),
            ],
            options={
                'verbose_name': 'Filialdagi mahsulot',
                'verbose_name_plural': 'Filialdagi mahsulotlar',
                'unique_together': {('product', 'branch')},
            },
        ),
        migrations.CreateModel(
            name='ProductRequestItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(default=0)),
                ('expire_date', models.DateField(blank=True, null=True)),
                ('selling_price', models.FloatField(default=0)),
                ('cost', models.FloatField(default=0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.product')),
                ('product_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.productrequest')),
            ],
        ),
        migrations.CreateModel(
            name='ProductReceiptItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(default=0)),
                ('selling_price', models.FloatField(default=0)),
                ('cost', models.FloatField(default=0)),
                ('comment', models.CharField(max_length=1024)),
                ('is_bonus', models.BooleanField(default=False)),
                ('percent', models.FloatField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.product')),
                ('receipt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='app.productreceipt')),
            ],
        ),
        migrations.AddField(
            model_name='productreceipt',
            name='warehouse',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='warehouse', to='app.warehouse'),
        ),
        migrations.CreateModel(
            name='ProductPriceChange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(default=0)),
                ('old_price', models.FloatField(default=0)),
                ('new_price', models.FloatField(default=0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductMoveBranchItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(default=0)),
                ('selling_price', models.FloatField(default=0)),
                ('expire_date', models.DateField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.product')),
                ('productmovegroup', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='app.productmovebranchgroup')),
            ],
        ),
        migrations.CreateModel(
            name='ProductMeta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(default=0)),
                ('cost', models.FloatField(default=0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_meta', to='app.product')),
                ('product_through_branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_meta', to='app.productthroughbranch')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='branch',
            field=models.ManyToManyField(through='app.ProductThroughBranch', to='app.Branch'),
        ),
        migrations.AddField(
            model_name='product',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.category'),
        ),
        migrations.AddField(
            model_name='product',
            name='deliver',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='deliver_product', to='app.deliver'),
        ),
        migrations.AddField(
            model_name='product',
            name='producer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_producer', to='app.producer'),
        ),
        migrations.AddField(
            model_name='product',
            name='section',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.section'),
        ),
        migrations.AddField(
            model_name='product',
            name='warehouse',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_warehouse', to='app.warehouse'),
        ),
        migrations.CreateModel(
            name='Outcome',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('requested', 'requested'), ('accepted', 'accepted'), ('rejected', 'rejected')], default='requested', max_length=10)),
                ('whom', models.CharField(blank=True, max_length=255, null=True)),
                ('card', models.FloatField(default=0, null=True)),
                ('sum', models.FloatField(default=0, null=True)),
                ('dollar', models.FloatField(default=0, null=True)),
                ('transfer', models.FloatField(default=0, null=True)),
                ('comment', models.CharField(blank=True, max_length=255, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.branch')),
                ('section', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.section')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.outcometype')),
            ],
        ),
        migrations.CreateModel(
            name='InvoiceItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(default=0)),
                ('selling_price', models.FloatField(default=0)),
                ('expire_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('preparing', 'preparing'), ('send', 'send'), ('accepted', 'accepted'), ('rejected', 'rejected')], default='preparing', max_length=55)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.invoice')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.product')),
            ],
        ),
        migrations.AddField(
            model_name='invoice',
            name='section',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.section'),
        ),
        migrations.AddField(
            model_name='invoice',
            name='staff',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='invoice',
            name='to_branch',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='to_branch', to='app.branch'),
        ),
        migrations.CreateModel(
            name='InventoryItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('real_amount', models.FloatField(default=0)),
                ('in_program_amount', models.FloatField(default=0)),
                ('difference_sum', models.FloatField(default=0)),
                ('difference_dollar', models.FloatField(default=0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('inventory', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app.inventoryinvoice')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app.product')),
            ],
        ),
        migrations.CreateModel(
            name='Income',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('whom', models.CharField(blank=True, max_length=255, null=True)),
                ('card', models.FloatField(default=0, null=True)),
                ('sum', models.FloatField(default=0, null=True)),
                ('dollar', models.FloatField(default=0, null=True)),
                ('transfer', models.FloatField(default=0, null=True)),
                ('comment', models.CharField(blank=True, max_length=255, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.branch')),
                ('section', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.section')),
            ],
        ),
        migrations.CreateModel(
            name='DiscountProductReceipt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('percent', models.FloatField(blank=True, default=0, null=True)),
                ('summ', models.FloatField(blank=True, default=0, null=True)),
                ('dollar', models.FloatField(blank=True, default=0, null=True)),
                ('currency', models.CharField(choices=[('sum', 'Sum'), ('dollar', 'Dollar')], default='sum', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('receipt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='discount_receipt', to='app.productreceipt')),
            ],
        ),
        migrations.CreateModel(
            name='DifferProductRecieveHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_price', models.FloatField(default=0)),
                ('traded_at', models.DateTimeField()),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('inventory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.inventoryinvoice')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.product')),
            ],
        ),
        migrations.CreateModel(
            name='ClientReturnItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(blank=True, max_length=1024, null=True)),
                ('amount', models.FloatField(default=0)),
                ('expire_date', models.DateField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.product')),
                ('return_cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.clientreturn')),
            ],
        ),
        migrations.AddField(
            model_name='clientreturn',
            name='section',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.section'),
        ),
        migrations.AddField(
            model_name='clientreturn',
            name='staff',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ClientPaymentHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paid_at', models.DateTimeField()),
                ('card', models.FloatField(default=0)),
                ('cash_sum', models.FloatField(default=0)),
                ('cash_dollar', models.FloatField(default=0)),
                ('discount_sum', models.FloatField(default=0)),
                ('discount_dollar', models.FloatField(default=0)),
                ('transfer', models.FloatField(default=0)),
                ('from_ball', models.FloatField(default=0)),
                ('comment', models.TextField(blank=True, max_length=500, null=True)),
                ('payment_for_loan', models.BooleanField(default=False)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.branch')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.client')),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='client',
            name='discount_card',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.discountcard'),
        ),
        migrations.CreateModel(
            name='CheckItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(default=0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('checks', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.check')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.product')),
            ],
        ),
        migrations.CreateModel(
            name='ChangeCurrency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_sum', models.FloatField(default=0)),
                ('from_dollar', models.FloatField(default=0)),
                ('currency', models.CharField(choices=[('sum', 'sum'), ('dollar', 'dollar')], default='dollar', max_length=20)),
                ('changed_at', models.DateTimeField(null=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='change_currency_branch', to='app.branch')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='change_currency_section', to='app.section')),
            ],
        ),
        migrations.AddField(
            model_name='cartitem',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.product'),
        ),
        migrations.AddField(
            model_name='cart',
            name='shop',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.shop'),
        ),
        migrations.CreateModel(
            name='BrokenProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(max_length=255)),
                ('broken_date', models.DateField(auto_now_add=True)),
                ('amount', models.IntegerField(default=0)),
                ('expire_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'pending'), ('approved', 'approved'), ('rejected', 'rejected')], default='pending', max_length=55)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.branch')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='added_broken_product', to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.product')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='approved_broken_product', to=settings.AUTH_USER_MODEL)),
                ('section', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.section')),
            ],
        ),
        migrations.CreateModel(
            name='BonusProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost', models.FloatField(default=0)),
                ('amount', models.FloatField(default=0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.product')),
            ],
        ),
        migrations.CreateModel(
            name='Amount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(default=0)),
                ('selling_price', models.FloatField(default=0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.branch')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_amount_branch', to='app.product')),
            ],
        ),
        migrations.CreateModel(
            name='Accountant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cash_sum', models.FloatField(default=0)),
                ('cash_dollar', models.FloatField(default=0)),
                ('card', models.FloatField(default=0)),
                ('loan_sum', models.FloatField(default=0)),
                ('loan_dollar', models.FloatField(default=0)),
                ('discount_sum', models.FloatField(default=0)),
                ('discount_dollar', models.FloatField(default=0)),
                ('transfer', models.FloatField(default=0)),
                ('change_sum', models.FloatField(default=0)),
                ('change_dollar', models.FloatField(default=0)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='branch_for_accountant', to='app.branch')),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='staff_for_accountant', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='staff',
            name='branch',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.branch'),
        ),
        migrations.AddField(
            model_name='staff',
            name='branches',
            field=models.ManyToManyField(related_name='providers', to='app.Branch'),
        ),
        migrations.AddField(
            model_name='staff',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='staff',
            name='section',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.section'),
        ),
        migrations.AddField(
            model_name='staff',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.CreateModel(
            name='Minimal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(default=0)),
                ('month', models.CharField(choices=[('january', 'Yanvar'), ('february', 'Fevral'), ('march', 'Mart'), ('april', 'Aprel'), ('may', 'May'), ('june', 'Iyun'), ('july', 'Iyul'), ('august', 'Avgust'), ('september', 'Sentyabr'), ('october', 'Oktyabr'), ('november', 'Noyabr'), ('december', 'Dekabr')], max_length=30)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.product')),
            ],
            options={
                'unique_together': {('product', 'month')},
            },
        ),
        migrations.CreateModel(
            name='DeliverLoan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('loan_dollar', models.FloatField(default=0)),
                ('loan_sum', models.FloatField(default=0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='loan_from_delivers', to='app.branch')),
                ('deliver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='loans', to='app.deliver')),
            ],
            options={
                'unique_together': {('deliver', 'branch')},
            },
        ),
        migrations.CreateModel(
            name='ClientLoan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('loan_sum', models.FloatField(default=0)),
                ('loan_dollar', models.FloatField(default=0)),
                ('return_date', models.DateField()),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='branch_loan', to='app.branch')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='client_loan', to='app.client')),
                ('staff', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('client', 'branch')},
            },
        ),
    ]
